{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/spencer/CPTR220-repos/project-amazingspencer/src/components/Cases.js\";\nimport React, { Component } from 'react';\nimport 'whatwg-fetch';\nexport default class Cases extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        id: \"case-count\",\n        children: [/*#__PURE__*/_jsxDEV(WorldStats, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CasesByCountry, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass WorldStats extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoading: false,\n      confirmed: 0,\n      deaths: 0,\n      recoveries: 0\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://wuhan-coronavirus-api.laeyoung.endpoint.ainize.ai/jhu-edu/brief').then(response => {\n      if (response.status >= 400) {\n        throw new Error(\"Unable to fetch data!\");\n      }\n\n      return response.json();\n    }).then(data => {\n      this.setState({\n        isLoading: false,\n        confirmed: data.confirmed,\n        deaths: data.deaths,\n        recoveries: data.recovered\n      });\n    }, // Error handling design inspired by https://medium.com/@shivamkumar19/react-fetch-data-e19c37736950\n    error => {\n      this.setState({\n        error,\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    let {\n      error,\n      isLoading\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"There was a problem with your request.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        style: {\n          marginTop: 5\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          id: \"spinner\",\n          class: \"fas fa-spin fa-circle-notch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 72\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Global Coronavirus Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Data from \", /*#__PURE__*/_jsxDEV(\"cite\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            style: {\n              textDecoration: 'underline'\n            },\n            href: \"https://github.com/Laeyoung/COVID-19-API\",\n            children: \"Laeyoung COVID-19-API\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 30\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LastUpdate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Confirmed Cases: \", new Intl.NumberFormat().format(this.state.confirmed)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Confirmed Deaths: \", new Intl.NumberFormat().format(this.state.deaths)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Confirmed Recoveries: \", new Intl.NumberFormat().format(this.state.recoveries)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass LastUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      lastUpdate: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://wuhan-coronavirus-api.laeyoung.endpoint.ainize.ai/jhu-edu/latest').then(response => {\n      if (response.status >= 400) {\n        throw new Error(\"Unable to fetch data!\");\n      }\n\n      return response.json();\n    }).then(data => {\n      // Use of Date class from https://css-tricks.com/how-to-convert-a-date-string-into-a-human-readable-format/\n      const options = {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n      };\n      let date = new Date(data[0].lastupdate).toLocaleDateString(undefined, options);\n      this.setState({\n        lastUpdate: date\n      });\n    }, // Error handling design inspired by https://medium.com/@shivamkumar19/react-fetch-data-e19c37736950\n    error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  render() {\n    let {\n      error\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Error! There was a problem with your request.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Last update: \", this.state.lastUpdate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass CasesByCountry extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      // setState logic inspired by https://medium.com/path2code/how-react-js-toggle-button-works-99c838ae2fe1\n      this.setState(currentState => ({\n        visible: !currentState.visible\n      }));\n    };\n\n    this.state = {\n      error: null,\n      visible: false,\n      countries: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://wuhan-coronavirus-api.laeyoung.endpoint.ainize.ai/jhu-edu/latest?onlyCountries=true').then(response => response.json()).then(data => {\n      this.setState({\n        countries: data\n      });\n    }, // Error handling design inspired by https://medium.com/@shivamkumar19/react-fetch-data-e19c37736950\n    error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  render() {\n    let {\n      error\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"There was a problem with your request.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 20\n      }, this);\n    }\n\n    let countries = this.state.countries.map(country => {\n      return /*#__PURE__*/_jsxDEV(TableRow, {\n        country: country\n      }, country.countryregion, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 20\n      }, this);\n    }); // Use of style for table inspired by https://builditmasters.com/2020/11/04/how-to-create-custom-toggle-in-react/\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"countryButton\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-primary caseButton\",\n          onClick: () => this.handleClick(),\n          children: \"Toggle Cases by Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"countryTable\",\n          className: \"table table-bordered table-striped\",\n          style: {\n            display: this.state.visible === true ? 'table' : 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n            cols: ['Country', 'Cases']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: countries\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass TableHeader extends Component {\n  render() {\n    let tableHeaders = this.props.cols.map(column => {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: column\n      }, column, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"thead\", {\n      id: \"tableHead\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: tableHeaders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass TableRow extends Component {\n  render() {\n    let country = this.props.country;\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: country.countryregion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: new Intl.NumberFormat().format(country.confirmed)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/spencer/CPTR220-repos/project-amazingspencer/src/components/Cases.js"],"names":["React","Component","Cases","render","WorldStats","constructor","props","state","error","isLoading","confirmed","deaths","recoveries","componentDidMount","fetch","then","response","status","Error","json","data","setState","recovered","marginTop","textDecoration","Intl","NumberFormat","format","LastUpdate","lastUpdate","options","year","month","day","date","Date","lastupdate","toLocaleDateString","undefined","CasesByCountry","handleClick","currentState","visible","countries","map","country","countryregion","display","TableHeader","tableHeaders","cols","column","TableRow"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'whatwg-fetch';\n\nexport default class Cases extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <main id=\"case-count\">\n                    <WorldStats />\n                    <CasesByCountry />\n                </main>\n            </div>\n        );\n    }\n}\n\nclass WorldStats extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoading: false,\n            confirmed: 0,\n            deaths: 0,\n            recoveries: 0\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://wuhan-coronavirus-api.laeyoung.endpoint.ainize.ai/jhu-edu/brief')\n            .then((response) => {\n                if (response.status >= 400) {\n                    throw new Error(\"Unable to fetch data!\");\n                }\n                return response.json()\n            })\n            .then((data) => {\n                this.setState({ isLoading: false, confirmed: data.confirmed, deaths: data.deaths, recoveries: data.recovered })\n            },\n            // Error handling design inspired by https://medium.com/@shivamkumar19/react-fetch-data-e19c37736950\n            error => {\n                this.setState({\n                    error,\n                    isLoading: false\n                })\n            });\n    }\n\n    render() {\n        let { error, isLoading } = this.state;\n        if (error) {\n            return <div><h1>There was a problem with your request.</h1></div>;\n        }\n        if (isLoading) {\n            return <div className=\"text-center\" style={{marginTop: 5}}><i id=\"spinner\" class=\"fas fa-spin fa-circle-notch\"></i></div>;\n        }\n        return (\n            <section>\n                <h1>Global Coronavirus Statistics</h1>\n                <p>Data from <cite><a style={{textDecoration: 'underline'}} href=\"https://github.com/Laeyoung/COVID-19-API\">Laeyoung COVID-19-API</a></cite>.</p>\n                <LastUpdate />\n                <h3>Confirmed Cases: {new Intl.NumberFormat().format(this.state.confirmed)}</h3>\n                <h3>Confirmed Deaths: {new Intl.NumberFormat().format(this.state.deaths)}</h3>\n                <h3>Confirmed Recoveries: {new Intl.NumberFormat().format(this.state.recoveries)}</h3>\n            </section>\n        );\n    }\n}\n\nclass LastUpdate extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            error: null,\n            lastUpdate: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://wuhan-coronavirus-api.laeyoung.endpoint.ainize.ai/jhu-edu/latest')\n            .then((response) => {\n                if (response.status >= 400) {\n                    throw new Error(\"Unable to fetch data!\");\n                }\n                return response.json()\n            })\n            .then((data) => {\n                // Use of Date class from https://css-tricks.com/how-to-convert-a-date-string-into-a-human-readable-format/\n                const options = { year: \"numeric\", month: \"long\", day: \"numeric\" }\n                let date = new Date(data[0].lastupdate).toLocaleDateString(undefined, options)\n                this.setState({ lastUpdate: date })\n            },\n            // Error handling design inspired by https://medium.com/@shivamkumar19/react-fetch-data-e19c37736950\n            error => {\n                this.setState({\n                    error,\n                })\n            });\n    }\n\n    render() {\n        let { error } = this.state;\n        if (error) {\n            return <div><h2>Error! There was a problem with your request.</h2></div>;\n        }\n        return <h2>Last update: {this.state.lastUpdate}</h2>\n    }\n}\n\nclass CasesByCountry extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            error: null,\n            visible: false,\n            countries: []\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://wuhan-coronavirus-api.laeyoung.endpoint.ainize.ai/jhu-edu/latest?onlyCountries=true')\n            .then((response) => response.json())\n            .then((data) => {\n                this.setState({ countries: data })\n            },\n            // Error handling design inspired by https://medium.com/@shivamkumar19/react-fetch-data-e19c37736950\n            error => {\n                this.setState({\n                    error,\n                })\n            });\n    }\n\n    handleClick = () => {\n        // setState logic inspired by https://medium.com/path2code/how-react-js-toggle-button-works-99c838ae2fe1\n        this.setState((currentState) => ({\n            visible: !currentState.visible,\n        }));\n    }\n\n    render() {\n        let { error } = this.state;\n        if (error) {\n            return <div><h1>There was a problem with your request.</h1></div>;\n        }\n\n        let countries = this.state.countries.map((country) => {\n            return <TableRow country={country} key={country.countryregion} />\n        })\n\n        // Use of style for table inspired by https://builditmasters.com/2020/11/04/how-to-create-custom-toggle-in-react/\n        return (\n            <section>\n                <div id=\"countryButton\">\n                    <button className=\"btn-primary caseButton\" onClick={() => this.handleClick()}>Toggle Cases by Country</button>\n                    <table id=\"countryTable\" className=\"table table-bordered table-striped\" style={{ display: this.state.visible === true ? 'table' : 'none' }}>\n                        <TableHeader cols={['Country', 'Cases']} />\n                        <tbody>\n                            {countries}\n                        </tbody>\n                    </table>\n                </div>\n            </section>\n        );\n    }\n}\n\nclass TableHeader extends Component {\n    render() {\n        let tableHeaders = this.props.cols.map((column) => {\n            return <th key={column}>{column}</th>\n        })\n\n        return (\n            <thead id=\"tableHead\">\n                <tr>\n                    {tableHeaders}\n                </tr>\n            </thead>\n        );\n    }\n}\n\nclass TableRow extends Component {\n    render() {\n        let country = this.props.country;\n\n        return (\n            <tr>\n                <td>{country.countryregion}</td>\n                <td>{new Intl.NumberFormat().format(country.confirmed)}</td>\n            </tr>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/spencer/CPTR220-repos/project-amazingspencer/src/components/Cases.js\";\nimport React, { Component } from 'react';\nimport 'whatwg-fetch';\nexport default class Cases extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        id: \"case-count\",\n        children: [/*#__PURE__*/_jsxDEV(WorldStats, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CasesByCountry, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass WorldStats extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmed: 0,\n      deaths: 0,\n      recoveries: 0\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://wuhan-coronavirus-api.laeyoung.endpoint.ainize.ai/jhu-edu/brief').then(response => response.json()).then(data => {\n      this.setState({\n        confirmed: data.confirmed,\n        deaths: data.deaths,\n        recoveries: data.recovered\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Global Coronavirus Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LastUpdate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Confirmed Cases: \", new Intl.NumberFormat().format(this.state.confirmed)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Confirmed Deaths: \", new Intl.NumberFormat().format(this.state.deaths)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Confirmed Recoveries: \", new Intl.NumberFormat().format(this.state.recoveries)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass LastUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lastUpdate: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://wuhan-coronavirus-api.laeyoung.endpoint.ainize.ai/jhu-edu/latest').then(response => response.json()).then(data => {\n      console.log(data); // Use of Date class from https://css-tricks.com/how-to-convert-a-date-string-into-a-human-readable-format/\n\n      const options = {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n      };\n      let date = new Date(data[0].lastupdate).toLocaleDateString(undefined, options);\n      this.setState({\n        lastUpdate: date\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Last update: \", this.state.lastUpdate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass CasesByCountry extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      if (this.state.visible) {\n        this.setState({\n          visible: false\n        });\n      } else {\n        this.setState({\n          visible: true\n        });\n      }\n    };\n\n    this.state = {\n      visible: false,\n      countries: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://wuhan-coronavirus-api.laeyoung.endpoint.ainize.ai/jhu-edu/latest?onlyCountries=true').then(response => response.json()).then(data => {\n      this.setState({\n        countries: data\n      });\n    });\n  }\n\n  render() {\n    let countries = this.state.countries.map(country => {\n      return /*#__PURE__*/_jsxDEV(TableRow, {\n        country: country\n      }, country.countryregion, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"countryButton\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-primary caseButton\",\n        onClick: this.handleClick,\n        children: \"Toggle Cases by Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"countryTable\",\n        className: \"table table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n          cols: ['Country', 'Cases']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: countries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass TableHeader extends Component {\n  render() {\n    let tableHeaders = this.props.cols.map(column => {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: column\n      }, column, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: tableHeaders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass TableRow extends Component {\n  render() {\n    let country = this.props.country;\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: country.countryregion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: new Intl.NumberFormat().format(country.confirmed)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/spencer/CPTR220-repos/project-amazingspencer/src/components/Cases.js"],"names":["React","Component","Cases","render","WorldStats","constructor","props","state","confirmed","deaths","recoveries","componentDidMount","fetch","then","response","json","data","setState","recovered","Intl","NumberFormat","format","LastUpdate","lastUpdate","console","log","options","year","month","day","date","Date","lastupdate","toLocaleDateString","undefined","CasesByCountry","handleClick","visible","countries","map","country","countryregion","TableHeader","tableHeaders","cols","column","TableRow"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'whatwg-fetch';\n\nexport default class Cases extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <main id=\"case-count\">\n                    <WorldStats />\n                    <CasesByCountry />\n                </main>\n            </div>\n        );\n    }\n}\n\nclass WorldStats extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            confirmed: 0,\n            deaths: 0,\n            recoveries: 0\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://wuhan-coronavirus-api.laeyoung.endpoint.ainize.ai/jhu-edu/brief')\n            .then((response) => response.json())\n            .then((data) => {\n                this.setState({ confirmed: data.confirmed, deaths: data.deaths, recoveries: data.recovered })\n            })\n    }\n\n    render() {\n        return (\n            <section>\n                <h1>Global Coronavirus Statistics</h1>\n                <LastUpdate />\n                <h3>Confirmed Cases: {new Intl.NumberFormat().format(this.state.confirmed)}</h3>\n                <h3>Confirmed Deaths: {new Intl.NumberFormat().format(this.state.deaths)}</h3>\n                <h3>Confirmed Recoveries: {new Intl.NumberFormat().format(this.state.recoveries)}</h3>\n            </section>\n        );\n    }\n}\n\nclass LastUpdate extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            lastUpdate: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://wuhan-coronavirus-api.laeyoung.endpoint.ainize.ai/jhu-edu/latest')\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(data);\n                // Use of Date class from https://css-tricks.com/how-to-convert-a-date-string-into-a-human-readable-format/\n                const options = { year: \"numeric\", month: \"long\", day: \"numeric\" }\n                let date = new Date(data[0].lastupdate).toLocaleDateString(undefined, options)\n                this.setState({ lastUpdate: date })\n            })\n    }\n\n    render() {\n        return <h2>Last update: {this.state.lastUpdate}</h2>\n    }\n}\n\nclass CasesByCountry extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            visible: false,\n            countries: []\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://wuhan-coronavirus-api.laeyoung.endpoint.ainize.ai/jhu-edu/latest?onlyCountries=true')\n            .then((response) => response.json())\n            .then((data) => {\n                this.setState({ countries: data })\n            })\n    }\n\n    handleClick = () => {\n        if (this.state.visible) {\n            this.setState({ visible: false })\n        } else {\n            this.setState({ visible: true })\n        }\n    }\n\n    render() {\n        let countries = this.state.countries.map((country) => {\n            return <TableRow country={country} key={country.countryregion} />\n        })\n        \n        return (\n            <div id=\"countryButton\">\n                <button className=\"btn-primary caseButton\" onClick={this.handleClick}>Toggle Cases by Country</button>\n                <table id=\"countryTable\" className=\"table table-bordered\">\n                    <TableHeader cols={['Country', 'Cases']} />\n                    <tbody>\n                        {countries}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nclass TableHeader extends Component {\n    render() {\n        let tableHeaders = this.props.cols.map((column) => {\n            return <th key={column}>{column}</th>\n        })\n\n        return (\n            <thead>\n                <tr>\n                    {tableHeaders}\n                </tr>\n            </thead>\n        );\n    }\n}\n\nclass TableRow extends Component {\n    render() {\n        let country = this.props.country;\n\n        return (\n            <tr>\n                <td>{country.countryregion}</td>\n                <td>{new Intl.NumberFormat().format(country.confirmed)}</td>\n            </tr>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}